void driving(double rotations, int speed)
{
LeftGroup.rotateFor(rotations, rotationUnits::deg, speed, velocityUnits::pct, false); //deg vs deg
RightGroup.rotateFor(rotations, rotationUnits::deg, speed, velocityUnits::pct, false);
}
void turnRight(double turnDistance, int speed) {
LeftGroup.rotateFor(-(turnDistance), rotationUnits::deg, speed, velocityUnits::pct, false);
RightGroup.rotateFor(turnDistance, rotationUnits::deg, speed, velocityUnits::pct, false);
}
void turnLeft(double turnDistance, int speed) {
LeftGroup.rotateFor((turnDistance), rotationUnits::deg, speed, velocityUnits::pct, false);
RightGroup.rotateFor(-(turnDistance), rotationUnits::deg, speed, velocityUnits::pct, false);
}
void spin(double rotations, int speed) //seconds?
{
IntakeMotors.rotateFor(rotations, rotationUnits::deg, speed, velocityUnits::pct, false);
}
void flywheel(double rotations, int speed) //seconds?
{
FlyWheel.rotateFor(rotations, rotationUnits::deg, speed, velocityUnits::pct, false);
}



void autonomous(void) {
  //spin roller
  driving(30, 50);
  spin(90, 90);
  wait(1, seconds);
  //turn around and drive forwards, collecting one disk
  turnLeft(180, 90);
  wait(2, seconds);
  spin(360, 90);
  driving(360, 90);
  wait(2, seconds);
  //spin flywheel, shoot high goal
  flywheel(1800, 90);
  wait(1, seconds);
  Indexer.set(true);
  //turn 45 degrees right, drive forwards and collect disk pile
  turnLeft(45, 90);
  wait(0.5, seconds);
  driving(1440, 90);
  spin(720, 90);
  wait(2, seconds);
  //turn and shoot high goal

  //turn and drive forwards, collecting 3 disks along the way

  //turn and shoot high goal

  //turn towards roller, drive forwards
  
  //spin roller

  //turn around
}
